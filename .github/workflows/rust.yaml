name: Build, Test, Deploy to k8s

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10
      - run: |
          sudo mkdir -p /var/lib/docker
          sudo mount -t tmpfs -o size=10G none /var/lib/docker
          sudo systemctl restart docker
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build and test code
        run: |
          cargo build --verbose
          cargo test --verbose
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm/v7
          tags: |
            ghcr.io/dilaz/gdqbot:latest
            ghcr.io/dilaz/gdqbot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_HOST }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: gdqbot
          action: deploy
          strategy: basic
          manifests: |
            k8s/deployment.yaml
          images: |
            ghcr.io/dilaz/gdqbot:${{ github.sha }}